import MongoDB from "./mongodb.util.js";

/**
 * T·∫°o indexes cho MongoDB ƒë·ªÉ tƒÉng t·ªëc ƒë·ªô truy v·∫•n
 */
async function createIndexes() {
  try {
    const client = MongoDB.client;
    const bookCollection = client.db().collection("Book");

    console.log("ƒêang t·∫°o indexes cho collection Book...");

    // Index cho _id (ƒë√£ c√≥ s·∫µn)

    // Index cho TENSACH (t√¨m ki·∫øm theo t√™n s√°ch)
    await bookCollection.createIndex({ TENSACH: 1 }, { background: true });
    console.log("‚úì ƒê√£ t·∫°o index cho TENSACH");

    // Index cho TRANGTHAI (l·ªçc theo tr·∫°ng th√°i)
    await bookCollection.createIndex({ TRANGTHAI: 1 }, { background: true });
    console.log("‚úì ƒê√£ t·∫°o index cho TRANGTHAI");

    // Index cho YEUTHICH (t√¨m s√°ch y√™u th√≠ch)
    await bookCollection.createIndex({ YEUTHICH: 1 }, { background: true });
    console.log("‚úì ƒê√£ t·∫°o index cho YEUTHICH");

    // Index cho MASACH (primary key)
    await bookCollection.createIndex(
      { MASACH: 1 },
      { unique: true, background: true }
    );
    console.log("‚úì ƒê√£ t·∫°o index UNIQUE cho MASACH");

    // Compound index cho THELOAI + TRANGTHAI (l·ªçc theo th·ªÉ lo·∫°i v√† tr·∫°ng th√°i)
    await bookCollection.createIndex(
      { THELOAI: 1, TRANGTHAI: 1 },
      { background: true }
    );
    console.log("‚úì ƒê√£ t·∫°o compound index cho THELOAI + TRANGTHAI");

    // Text index cho t√¨m ki·∫øm full-text
    await bookCollection.createIndex(
      { TENSACH: "text", TACGIA: "text", THELOAI: "text" },
      { background: true }
    );
    console.log("‚úì ƒê√£ t·∫°o text index cho t√¨m ki·∫øm full-text");

    console.log("\n‚úÖ Ho√†n th√†nh t·∫°o indexes!");
    console.log("üìä Danh s√°ch indexes hi·ªán t·∫°i:");

    const indexes = await bookCollection.indexes();
    indexes.forEach((index, i) => {
      console.log(`${i + 1}. ${index.name}:`, JSON.stringify(index.key));
    });
  } catch (error) {
    console.error("‚ùå L·ªói khi t·∫°o indexes:", error);
  }
}

export default createIndexes;
